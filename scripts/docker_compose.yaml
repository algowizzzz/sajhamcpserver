# Docker Compose configuration for MCP Server
# Â© 2025-2030 Ashutosh Sinha

version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-server
    ports:
      - "5000:5000"
    environment:
      # Server Configuration
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-change_me_in_production}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5000

      # API Keys (set in .env file)
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_CSE_ID=${GOOGLE_CSE_ID}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - FRED_API_KEY=${FRED_API_KEY}
      - CENSUS_API_KEY=${CENSUS_API_KEY}
      - SEC_USER_AGENT=${SEC_USER_AGENT:-MCPServer/1.0}

      # Database Configuration
      - SQL_DB_PATH=/app/data/sample.db
      - DUCKDB_DATA_FOLDER=/app/data
      - OFFICE_DATA_FOLDER=/app/data/office_files

    volumes:
      # Persist data
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config

      # For development - mount source code
      # - ./core:/app/core
      # - ./tools:/app/tools
      # - ./web:/app/web

    restart: unless-stopped

    networks:
      - mcp-network

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcp-server
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - production

  # Optional: Add Redis for caching
  redis:
    image: redis:alpine
    container_name: mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - cache

  # Optional: Add PostgreSQL for production database
  postgres:
    image: postgres:15-alpine
    container_name: mcp-postgres
    environment:
      - POSTGRES_DB=mcpserver
      - POSTGRES_USER=${POSTGRES_USER:-mcpuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - production

networks:
  mcp-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: